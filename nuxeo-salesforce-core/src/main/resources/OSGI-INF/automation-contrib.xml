<?xml version="1.0"?>
<component name="org.nuxeo.salesforce.automation.contrib">
  <extension target="org.nuxeo.ecm.core.operation.OperationServiceComponent"
             point="operations">
    <operation
            class="org.nuxeo.salesforce.SalesforceAuditProvider" />
  </extension>
  <extension
          target="org.nuxeo.automation.scripting.internals.AutomationScriptingComponent"
          point="operation">
    <scriptedOperation id="javascript.FetchSFObject">
      <inputType>void</inputType>
      <outputType>void</outputType>
      <category>javascript</category>
      <script>
        <![CDATA[function run(input, params) {
	var sfobject = JSON.parse(params.sfObject);
	var query = "SELECT * FROM Document WHERE ecm:currentLifeCycleState != 'deleted' AND sfop:objectId = '" +
		sfobject.Id + "' AND ecm:isCheckedInVersion = 0 AND ecm:mixinType != 'HiddenInNavigation'";
	var docs = Repository.Query(null, {
		'query': query,
	});

	if (docs.length > 0) {
		var foundDoc = Repository.GetDocument(null, {
			'value': docs[0].id
		});
		return foundDoc;

	} else {
		var newSFobject = {};
		if (sfobject.attributes.type === "Opportunity") {
                    	var opportunitiesRoot;
                        var roots = Repository.Query(null, {
                            'query': "SELECT * FROM OpportunityContainer WHERE ecm:currentLifeCycleState != 'deleted'",
                        });

			if (roots.length > 0) {
              			opportunitiesRoot = roots[0];
            		} else {
                      		var domain = Repository.GetDocument(null, {'value': "/default-domain/"});
				opportunitiesRoot = Document.Create(domain, {
					"type": "OpportunityContainer",
					"name": "Opportunities",
					"properties": {
						"dc:title": "Opportunities"
					}
				});
			}

			var amount = sfobject.Amount ? sfobject.Amount.toString() : null;

			newSFobject = Document.Create(opportunitiesRoot, {
				"type": "Opportunity",
				"name": sfobject.Name,
				"properties": {
					"dc:title": sfobject.Name,
					"sfop:objectId": sfobject.Id,
					"sfop:type": sfobject.attributes.type,
					"dc:description": sfobject.Description,
					"sfop:description": sfobject.Description,
					"sfop:amount": amount,
					"sfop:object": JSON.stringify(sfobject)
				}
			});

			return newSFobject;

		} else {
			var message = "Unrecognized object type: " + sfobject.attributes.type;
			Log(input, {'level': "warn",'message': message});
			return null;
		}
	}
}]]>
      </script>
    </scriptedOperation>
    <scriptedOperation id="javascript.SFGetChildren">
      <inputType>document</inputType>
      <outputType>documents</outputType>
      <category>javascript</category>
      <script>
        <![CDATA[function run(input, params) {
            return Document.GetChildren(input, {});
        }]]>
      </script>
    </scriptedOperation>
  </extension>
  <extension target="org.nuxeo.ecm.automation.server.AutomationServer"
             point="bindings">
    <!-- Give access to Audit logs -->
    <binding name="Salesforce.AuditProvider">
      <!-- Temporarily removed 'secure' option: TODO: NXP-18150 -->
      <!--<secure>true</secure>-->
      <groups>administrators,members</groups>
    </binding>
  </extension>
</component>
